p1 = detect('face1.png', 0); % Content image
p2 = detect('face3.png', 0); % Style image

img1 = imresize(imread('face1.png'), [300 230]);
img2 = imresize(imread('face3.png'), [300 230]);

figure, imshow(img2);

new_points1 = zeros(66+13+12, 2);
new_points2 = zeros(66+13+12, 2);
for i=1:66
    new_points1(i,:) = p1.points(i,:);
    new_points2(i,:) = p2.points(i,:);
end
for i=1:13
    new_points1(66+i,1) = p1.points(i+2,1);
    new_points1(66+i,2) = p1.points(i+2,2)*-1 + 300;
    new_points1(66+i,2) = new_points1(66+i,2) / exp((200 - new_points1(66+i,2))/300);
    new_points1(66+i,2) = new_points1(66+i,2) + 25;
    new_points2(66+i,1) = p2.points(i+2,1);
    new_points2(66+i,2) = p2.points(i+2,2)*-1 + 300;
    new_points2(66+i,2) = new_points2(66+i,2) / exp((200 - new_points2(66+i,2))/300);
    new_points2(66+i,2) = new_points2(66+i,2) + 25;
end
for i=1:4
    new_points1(66+13+i,1) = 0; new_points1(66+13+i,2) = (i-1)*0/4 + (4-i+1)*300/4;
    new_points2(66+13+i,1) = 0; new_points2(66+13+i,2) = (i-1)*0/4 + (4-i+1)*300/4;
    new_points1(66+13+4+i,1) = 230; new_points1(66+13+4+i,2) = (i-1)*0/4 + (4-i+1)*300/4;
    new_points2(66+13+4+i,1) = 230; new_points2(66+13+4+i,2) = (i-1)*0/4 + (4-i+1)*300/4;
    new_points1(66+13+8+i,1) = (i-1)*0/4 + (4-i+1)*23; new_points1(66+13+8+i,2) = 0;
    new_points2(66+13+8+i,1) = 0; new_points2(66+13+8+i,2) = 0;
    new_points1(66+13+12+i,1) = 230; new_points1(66+13+12+i,2) = 300;
    new_points2(66+13+12+i,1) = 230; new_points2(66+13+12+i,2) = 300;
end
new_points1(66+13+3,1) = 230; new_points1(66+13+3,2) = 0;
new_points1(66+13+4,1) = 230; new_points1(66+13+4,2) = 300;
new_points2(66+13+1,1) = 0; new_points2(66+13+1,2) = 0;
new_points2(66+13+2,1) = 0; new_points2(66+13+2,2) = 300;
new_points2(66+13+3,1) = 230; new_points2(66+13+3,2) = 0;
new_points2(66+13+4,1) = 230; new_points2(66+13+4,2) = 300;
p1.points = new_points1;
p2.points = new_points2;
figure, imshow(img2);

%Delaunay points
% We need to warp style image to the content image
dis = p1.points;
x = dis(:, 1); y = dis(:, 2);
tri = delaunay(x,y);

%https://github.com/GabriellaQiong/Face-Morphing/blob/master/morph.m%
% Warps given 2 images to the triangulation specified considering
% weightages as the second last parameter. Here since its 0, we would warp
% the style image (p2) to the specified triangulation of the content image
% (p1) and then return that as the final morphed style image
morphed_im = morph(uint8(p2.img*255), uint8(p1.img*255), p2.points, p1.points, tri, 1, 0, 0);

morphed_im = im2double(morphed_im);
figure, imshow(morphed_im);

% Generate the new warped style image
new_style_img = p2.img;

for i=1:size(orig,1)
    for j=1:size(orig,2)
        if ~(morphed_im(i,j,1) == 0 && morphed_im(i,j,2) == 0 && morphed_im(i,j,3) == 0) 
            new_style_img(i,j,:) = morphed_im(i,j,:);
        end
    end
end

figure, imshow(new_style_img);
axis image;
hold on;
plot(new_points1(:,1),new_points1(:,2),'r.')

